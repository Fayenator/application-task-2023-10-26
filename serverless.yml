org: alexschmutz
app: application-task-2023-10-26
service: application-task-2023-10-26
frameworkVersion: "3"

custom:
  tableName: "users-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:Query"
            - "dynamodb:Scan*"
            - "dynamodb:Get*"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-me-${sls:stage}
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${self:custom.tableName}
    DYNAMODB_MEASUREMENT_TABLE: ${self:service}-MeasurementTable-${sls:stage}

functions:
  api:
    handler: index.handler
    events:
      - httpApi: "*"
  addMeasurment:
    handler: addMeasurement.addMeasurement
    events:
      - httpApi:
          path: /
          method: post

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}

    MeasurementTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: measurement_id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: measurement_id
            KeyType: HASH
        TableName: ${self:service}-measurementTable-${sls:stage}
